"""
This type stub file was generated by pyright.
"""

import asyncio
from typing import Callable

class WSProtocol(asyncio.Protocol):
    def __init__(
        self, config, server_state, on_connection_lost: Callable = ..., _loop=...
    ) -> None: ...
    def connection_made(self, transport): ...
    def connection_lost(self, exc): ...
    def eof_received(self): ...
    def data_received(self, data): ...
    def handle_events(self): ...
    def pause_writing(self):  # -> None:
        """
        Called by the transport when the write buffer exceeds the high water mark.
        """
        ...
    def resume_writing(self):  # -> None:
        """
        Called by the transport when the write buffer drops below the low water mark.
        """
        ...
    def shutdown(self): ...
    def on_task_complete(self, task): ...
    def handle_connect(self, event): ...
    def handle_no_connect(self, event): ...
    def handle_text(self, event): ...
    def handle_bytes(self, event): ...
    def handle_close(self, event): ...
    def handle_ping(self, event): ...
    def send_500_response(self): ...
    async def run_asgi(self): ...
    async def send(self, message): ...
    async def receive(self): ...
