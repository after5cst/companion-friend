"""
This type stub file was generated by pyright.
"""

from typing import Iterable, Optional, Tuple
from asgiref.typing import (
    ASGIReceiveCallable,
    ASGIReceiveEvent,
    ASGISendCallable,
    HTTPScope,
)
from uvicorn._types import Environ, ExcInfo, StartResponse, WSGIApp

def build_environ(scope: HTTPScope, message: ASGIReceiveEvent, body: bytes) -> Environ:
    """
    Builds a scope and request message into a WSGI environ object.
    """
    ...

class WSGIMiddleware:
    def __init__(self, app: WSGIApp, workers: int = ...) -> None: ...
    async def __call__(
        self, scope: HTTPScope, receive: ASGIReceiveCallable, send: ASGISendCallable
    ) -> None: ...

class WSGIResponder:
    def __init__(
        self,
        app: WSGIApp,
        executor: concurrent.futures.ThreadPoolExecutor,
        scope: HTTPScope,
    ) -> None: ...
    async def __call__(
        self, receive: ASGIReceiveCallable, send: ASGISendCallable
    ) -> None: ...
    async def sender(self, send: ASGISendCallable) -> None: ...
    def start_response(
        self,
        status: str,
        response_headers: Iterable[Tuple[str, str]],
        exc_info: Optional[ExcInfo] = ...,
    ) -> None: ...
    def wsgi(self, environ: Environ, start_response: StartResponse) -> None: ...
