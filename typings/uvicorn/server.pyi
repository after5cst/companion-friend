"""
This type stub file was generated by pyright.
"""

import platform
import signal
import socket
import sys
from types import FrameType
from typing import List, Optional, TYPE_CHECKING, Union
from uvicorn.config import Config
from uvicorn.protocols.http.h11_impl import H11Protocol
from uvicorn.protocols.http.httptools_impl import HttpToolsProtocol
from uvicorn.protocols.websockets.websockets_impl import WebSocketProtocol
from uvicorn.protocols.websockets.wsproto_impl import WSProtocol

if TYPE_CHECKING:
    Protocols = Union[H11Protocol, HttpToolsProtocol, WSProtocol, WebSocketProtocol]
if sys.platform != "win32": ...
else: ...
HANDLED_SIGNALS = ...
logger = ...

class ServerState:
    """
    Shared servers state that is available between all protocol instances.
    """

    def __init__(self) -> None: ...

class Server:
    def __init__(self, config: Config) -> None: ...
    def run(self, sockets: Optional[List[socket.socket]] = ...) -> None: ...
    async def serve(self, sockets: Optional[List[socket.socket]] = ...) -> None: ...
    async def startup(self, sockets: list = ...) -> None: ...
    async def main_loop(self) -> None: ...
    async def on_tick(self, counter: int) -> bool: ...
    async def shutdown(self, sockets: Optional[List[socket.socket]] = ...) -> None: ...
    def install_signal_handlers(self) -> None: ...
    def handle_exit(self, sig: signal.Signals, frame: FrameType) -> None: ...
